<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

<!-- Appenders -->
<!-- ======================自定义输出格式说明==================================== -->
<!-- %p 输出优先级，即DEBUG,INFO,WARN,ERROR,FATAL -->
<!-- %r 输出自应用启动到输出该log信息耗费的毫秒数 -->
<!-- %c 输出所属的类目，通常就是所在类的全名 -->
<!-- %t 输出产生该日志的线程名 -->
<!-- %n 输出一个回车换行符，windows为"/r/n",Unix平台为"/n" -->
<!-- %d 输出日志时间点的日期或者时间，默认格式为ISO8601，也可以在其后指定格式，比如%d{yyy MMM dd HH:mm:ss,SSS} -->
<!-- 输出时间类似于2003年10月18日 22:10:28,921 -->
<!-- %l 输出日志时间的发生位置，包括类目名，发生的线程，以及在代码中的行数。举例：Testlog4.min(TestLog4.java:10) -->

<!-- =====================输出方式说明============================================ -->
<!-- Log4j提供的appender有以下几种： -->
<!-- org.apache.log4j.ConsoleAppender(控制台) -->
<!-- org.apache.log4j.FileAppender(文件) -->
<!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件) -->
<!-- org.apache.log4j.RollingFileAppender(文件大小到达指定的尺寸的时候产生一个新的文件) -->
<!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方) -->
<!-- 1.一个appender子元素定义一个日志输出目的地 -->
<!-- <appender name="console" class="org.apache.log4j.ConsoleAppender">
<param name="Target" value="System.out" />
<layout class="org.apache.log4j.PatternLayout">
<param name="ConversionPattern" value="%-5p: %c - %m%n" />
</layout>
</appender> -->

<appender name="console" class="org.apache.log4j.ConsoleAppender">
<layout class="org.apache.log4j.PatternLayout">
<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss}] %-5p: %c - %m%n"/>
</layout>
</appender>
<appender name="LOGDEBUG" class="org.apache.log4j.DailyRollingFileAppender">
<!-- Threshold屏蔽级别之下的日志输出 -->
<param name="Threshold" value="DEBUG"/>
<param name="encoding" value="UTF-8"/>
<param name="File" value="c:/SchoolLog/SchoolLog_"/>
<param name="DatePattern" value="'debug_'yyyy-MM-dd'.log'"/>
<layout class="org.apache.log4j.PatternLayout">
<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss}] %-5p: %c - %m%n"/>
</layout>
</appender>
<!-- Application Loggers -->
<!-- 2.一个logger子元素定义一个日志写出器 -->
<logger name="com.huawei.qa">
<level value="info" />
</logger>

<!-- 3rdparty Loggers -->
<logger name="org.springframework.core">
<level value="info" />
</logger>

<logger name="org.springframework.beans">
<level value="info" />
</logger>

<logger name="org.springframework.context">
<level value="info" />
</logger>

<logger name="org.springframework.web">
<level value="info" />
</logger>

<!-- Root Logger -->
<root>
<priority value="warn" />
<appender-ref ref="console" />
<appender-ref ref="LOGDEBUG" />
</root>

</log4j:configuration>